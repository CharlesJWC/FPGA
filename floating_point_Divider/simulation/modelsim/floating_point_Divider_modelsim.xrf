vendor_name = ModelSim
source_file = 1, D:/Workspace/Altera_Quartus_Workspace/floating_point_Divider/floating_point_Divider.v
source_file = 1, D:/Workspace/Altera_Quartus_Workspace/floating_point_Divider/Dvider.v
source_file = 1, D:/Workspace/Altera_Quartus_Workspace/floating_point_Divider/db/floating_point_Divider.cbx.xml
design_name = floating_point_Divider
instance = comp, \CLK~I , CLK, floating_point_Divider, 1
instance = comp, \CLK~clkctrl , CLK~clkctrl, floating_point_Divider, 1
instance = comp, \St~I , St, floating_point_Divider, 1
instance = comp, \F2[7]~I , F2[7], floating_point_Divider, 1
instance = comp, \RegF2[7] , RegF2[7], floating_point_Divider, 1
instance = comp, \F2[6]~I , F2[6], floating_point_Divider, 1
instance = comp, \RegF2[6] , RegF2[6], floating_point_Divider, 1
instance = comp, \Equal1~0 , Equal1~0, floating_point_Divider, 1
instance = comp, \F1[7]~I , F1[7], floating_point_Divider, 1
instance = comp, \F1[6]~I , F1[6], floating_point_Divider, 1
instance = comp, \RegF1~7 , RegF1~7, floating_point_Divider, 1
instance = comp, \RegF1[6] , RegF1[6], floating_point_Divider, 1
instance = comp, \F1[5]~I , F1[5], floating_point_Divider, 1
instance = comp, \RegF1~6 , RegF1~6, floating_point_Divider, 1
instance = comp, \RegF1[5] , RegF1[5], floating_point_Divider, 1
instance = comp, \F1[4]~I , F1[4], floating_point_Divider, 1
instance = comp, \RegF1~5 , RegF1~5, floating_point_Divider, 1
instance = comp, \RegF1[4] , RegF1[4], floating_point_Divider, 1
instance = comp, \F1[3]~I , F1[3], floating_point_Divider, 1
instance = comp, \RegF1~4 , RegF1~4, floating_point_Divider, 1
instance = comp, \RegF1[3] , RegF1[3], floating_point_Divider, 1
instance = comp, \F1[2]~I , F1[2], floating_point_Divider, 1
instance = comp, \RegF1~3 , RegF1~3, floating_point_Divider, 1
instance = comp, \RegF1[2] , RegF1[2], floating_point_Divider, 1
instance = comp, \F1[1]~I , F1[1], floating_point_Divider, 1
instance = comp, \RegF1~1 , RegF1~1, floating_point_Divider, 1
instance = comp, \RegF1[1] , RegF1[1], floating_point_Divider, 1
instance = comp, \F1[0]~I , F1[0], floating_point_Divider, 1
instance = comp, \RegF1~0 , RegF1~0, floating_point_Divider, 1
instance = comp, \RegF1[0] , RegF1[0], floating_point_Divider, 1
instance = comp, \Add0~1 , Add0~1, floating_point_Divider, 1
instance = comp, \Add0~5 , Add0~5, floating_point_Divider, 1
instance = comp, \Add0~9 , Add0~9, floating_point_Divider, 1
instance = comp, \Add0~13 , Add0~13, floating_point_Divider, 1
instance = comp, \Add0~17 , Add0~17, floating_point_Divider, 1
instance = comp, \Add0~21 , Add0~21, floating_point_Divider, 1
instance = comp, \Add0~25 , Add0~25, floating_point_Divider, 1
instance = comp, \Add0~29 , Add0~29, floating_point_Divider, 1
instance = comp, \F2[5]~I , F2[5], floating_point_Divider, 1
instance = comp, \RegF2[5] , RegF2[5], floating_point_Divider, 1
instance = comp, \F2[4]~I , F2[4], floating_point_Divider, 1
instance = comp, \RegF2[4] , RegF2[4], floating_point_Divider, 1
instance = comp, \F2[3]~I , F2[3], floating_point_Divider, 1
instance = comp, \RegF2[3] , RegF2[3], floating_point_Divider, 1
instance = comp, \F2[2]~I , F2[2], floating_point_Divider, 1
instance = comp, \RegF2[2] , RegF2[2], floating_point_Divider, 1
instance = comp, \F2[1]~I , F2[1], floating_point_Divider, 1
instance = comp, \RegF2[1] , RegF2[1], floating_point_Divider, 1
instance = comp, \F2[0]~I , F2[0], floating_point_Divider, 1
instance = comp, \RegF2[0] , RegF2[0], floating_point_Divider, 1
instance = comp, \Add1~2 , Add1~2, floating_point_Divider, 1
instance = comp, \Add1~6 , Add1~6, floating_point_Divider, 1
instance = comp, \Add1~10 , Add1~10, floating_point_Divider, 1
instance = comp, \Add1~14 , Add1~14, floating_point_Divider, 1
instance = comp, \Add1~18 , Add1~18, floating_point_Divider, 1
instance = comp, \Add1~22 , Add1~22, floating_point_Divider, 1
instance = comp, \Add1~26 , Add1~26, floating_point_Divider, 1
instance = comp, \Add1~30 , Add1~30, floating_point_Divider, 1
instance = comp, \Add1~33 , Add1~33, floating_point_Divider, 1
instance = comp, \RegF1[5]~2 , RegF1[5]~2, floating_point_Divider, 1
instance = comp, \state.001 , state.001, floating_point_Divider, 1
instance = comp, \RSF~0 , RSF~0, floating_point_Divider, 1
instance = comp, \RegF1[7]~8 , RegF1[7]~8, floating_point_Divider, 1
instance = comp, \RegF1[7] , RegF1[7], floating_point_Divider, 1
instance = comp, \Equal0~0 , Equal0~0, floating_point_Divider, 1
instance = comp, \always0~0 , always0~0, floating_point_Divider, 1
instance = comp, \Selector4~0 , Selector4~0, floating_point_Divider, 1
instance = comp, \state.100 , state.100, floating_point_Divider, 1
instance = comp, \Selector0~0 , Selector0~0, floating_point_Divider, 1
instance = comp, \state.000 , state.000, floating_point_Divider, 1
instance = comp, \Load~0 , Load~0, floating_point_Divider, 1
instance = comp, \RegF1~0DUPLICATE , RegF1~0DUPLICATE, floating_point_Divider, 1
instance = comp, \RegF1[0]~DUPLICATE , RegF1[0]~DUPLICATE, floating_point_Divider, 1
instance = comp, \E2[0]~I , E2[0], floating_point_Divider, 1
instance = comp, \RegE2[0]~feeder , RegE2[0]~feeder, floating_point_Divider, 1
instance = comp, \RegE2[0] , RegE2[0], floating_point_Divider, 1
instance = comp, \Add3~3 , Add3~3, floating_point_Divider, 1
instance = comp, \Add3~6 , Add3~6, floating_point_Divider, 1
instance = comp, \E1[0]~I , E1[0], floating_point_Divider, 1
instance = comp, \RegE1[4]~0 , RegE1[4]~0, floating_point_Divider, 1
instance = comp, \RegE1[0] , RegE1[0], floating_point_Divider, 1
instance = comp, \E2[1]~I , E2[1], floating_point_Divider, 1
instance = comp, \RegE2[1] , RegE2[1], floating_point_Divider, 1
instance = comp, \Add3~9 , Add3~9, floating_point_Divider, 1
instance = comp, \Add3~11 , Add3~11, floating_point_Divider, 1
instance = comp, \E1[1]~I , E1[1], floating_point_Divider, 1
instance = comp, \RegE1[1] , RegE1[1], floating_point_Divider, 1
instance = comp, \E2[2]~I , E2[2], floating_point_Divider, 1
instance = comp, \RegE2[2] , RegE2[2], floating_point_Divider, 1
instance = comp, \Add3~14 , Add3~14, floating_point_Divider, 1
instance = comp, \Add3~16 , Add3~16, floating_point_Divider, 1
instance = comp, \E1[2]~I , E1[2], floating_point_Divider, 1
instance = comp, \RegE1[2] , RegE1[2], floating_point_Divider, 1
instance = comp, \E2[3]~I , E2[3], floating_point_Divider, 1
instance = comp, \RegE2[3] , RegE2[3], floating_point_Divider, 1
instance = comp, \Add3~19 , Add3~19, floating_point_Divider, 1
instance = comp, \Add3~21 , Add3~21, floating_point_Divider, 1
instance = comp, \E1[3]~I , E1[3], floating_point_Divider, 1
instance = comp, \RegE1[3] , RegE1[3], floating_point_Divider, 1
instance = comp, \E2[4]~I , E2[4], floating_point_Divider, 1
instance = comp, \RegE2[4] , RegE2[4], floating_point_Divider, 1
instance = comp, \Add3~24 , Add3~24, floating_point_Divider, 1
instance = comp, \Add3~26 , Add3~26, floating_point_Divider, 1
instance = comp, \E1[4]~I , E1[4], floating_point_Divider, 1
instance = comp, \RegE1[4] , RegE1[4], floating_point_Divider, 1
instance = comp, \Add3~30 , Add3~30, floating_point_Divider, 1
instance = comp, \RegE1[5] , RegE1[5], floating_point_Divider, 1
instance = comp, \V~0 , V~0, floating_point_Divider, 1
instance = comp, \Fout[0]~I , Fout[0], floating_point_Divider, 1
instance = comp, \Fout[1]~I , Fout[1], floating_point_Divider, 1
instance = comp, \Fout[2]~I , Fout[2], floating_point_Divider, 1
instance = comp, \Fout[3]~I , Fout[3], floating_point_Divider, 1
instance = comp, \Fout[4]~I , Fout[4], floating_point_Divider, 1
instance = comp, \Fout[5]~I , Fout[5], floating_point_Divider, 1
instance = comp, \Fout[6]~I , Fout[6], floating_point_Divider, 1
instance = comp, \Fout[7]~I , Fout[7], floating_point_Divider, 1
instance = comp, \Eout[0]~I , Eout[0], floating_point_Divider, 1
instance = comp, \Eout[1]~I , Eout[1], floating_point_Divider, 1
instance = comp, \Eout[2]~I , Eout[2], floating_point_Divider, 1
instance = comp, \Eout[3]~I , Eout[3], floating_point_Divider, 1
instance = comp, \Eout[4]~I , Eout[4], floating_point_Divider, 1
instance = comp, \V~I , V, floating_point_Divider, 1
instance = comp, \Done~I , Done, floating_point_Divider, 1
